#volumes:
#  griddb:

services:

  griddb-server1:
    build:
      context: griddb-server
      dockerfile: Dockerfile
    container_name: griddb-server1
    user: root
    expose:
      - '10001'
#    ports:
#      - "10001:10001"
    environment:
      NOTIFICATION_MEMBER: 1
      GRIDDB_CLUSTER_NAME: myCluster
      COMPRESSION_MODE: 0
#    volumes:
#     -  griddb:/var/lib/gridstore
    healthcheck:
        test: ["CMD", "gs_sh"]
        interval: 30s
        timeout: 10s
        retries: 5

  griddb-server2:
    build:
      context: griddb-server
      dockerfile: Dockerfile
    container_name: griddb-server2
    user: root
    expose:
      - '10001'
#    ports:
#      - "10001:10001"
    environment:
      NOTIFICATION_MEMBER: 1
      GRIDDB_CLUSTER_NAME: myCluster
      COMPRESSION_MODE: 1
 #   volumes:
 #    -  griddb:/var/lib/gridstore
    healthcheck:
        test: ["CMD", "gs_sh"]
        interval: 30s
        timeout: 10s
        retries: 5

  griddb-server3:
    build:
      context: griddb-server
      dockerfile: Dockerfile
    container_name: griddb-server3
    user: root
    expose:
      - '10001'
#    ports:
#      - "10001:10001"
    environment:
      NOTIFICATION_MEMBER: 1
      GRIDDB_CLUSTER_NAME: myCluster
      COMPRESSION_MODE: 2
 #   volumes:
 #    -  griddb:/var/lib/gridstore
    healthcheck:
        test: ["CMD", "gs_sh"]
        interval: 30s
        timeout: 10s
        retries: 5


  ingest: 
    build:
      context: census-analysis
      dockerfile: Dockerfile
    container_name: census-analysis
    profiles:
      - donotstart
    depends_on:
      griddb-server:
        condition: service_healthy
